{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mboet\\\\OneDrive\\\\Desktop\\\\react\\\\scoreboard\\\\src\\\\components\\\\Stopwatch.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isRunning: false,\n      elapsedTime: 0,\n      previousTime: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        const now = Date.now();\n        this.setState(prevState => ({\n          previousTime: now,\n          elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n        }));\n      }\n    };\n\n    this.handleStopwatch = () => {\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning\n      }));\n\n      if (!this.state.isRunning) {\n        this.setState({\n          previousTime: Date.now()\n        });\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        elapsedTime: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["C:/Users/mboet/OneDrive/Desktop/react/scoreboard/src/components/Stopwatch.js"],"names":["React","Component","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","componentDidMount","intervalID","setInterval","componentWillUnmount","clearInterval","render","seconds","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCE,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,WAAW,EAAE,CAFP;AAGNC,MAAAA,YAAY,EAAE;AAHR,KAFwB;;AAAA,SAgBhCC,IAhBgC,GAgBzB,MAAM;AACX,UAAI,KAAKJ,KAAL,CAAWC,SAAf,EAA0B;AACxB,cAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,aAAKE,QAAL,CAAeC,SAAS,KAAK;AAC3BL,UAAAA,YAAY,EAAEE,GADa;AAE3BH,UAAAA,WAAW,EAAEM,SAAS,CAACN,WAAV,IAAyBG,GAAG,GAAG,KAAKL,KAAL,CAAWG,YAA1C;AAFc,SAAL,CAAxB;AAID;AACF,KAxB+B;;AAAA,SA0BhCM,eA1BgC,GA0Bd,MAAM;AACtB,WAAKF,QAAL,CAAeC,SAAS,KAAK;AAC3BP,QAAAA,SAAS,EAAE,CAACO,SAAS,CAACP;AADK,OAAL,CAAxB;;AAGA,UAAI,CAAC,KAAKD,KAAL,CAAWC,SAAhB,EAA2B;AACzB,aAAKM,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEG,IAAI,CAACD,GAAL;AAAhB,SAAd;AACD;AACF,KAjC+B;;AAAA,SAmChCK,WAnCgC,GAmClB,MAAM;AAClB,WAAKH,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KArC+B;AAAA;;AAQhCS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKT,IAAL,EAAP,EAAoB,GAApB,CAA7B;AACD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACD;;AAyBDI,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKnB,KAAL,CAAWE,WAAX,GAAyB,IAApC,CAAhB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBAAmCe;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKR,eAAtB;AAAA,kBACI,KAAKT,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AADpC;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,OAAO,EAAE,KAAKS,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApD+B;;AAuDlC,eAAeX,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState( prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n  \n  handleStopwatch = () => {\n    this.setState( prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  }\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{ seconds }</span>\n        <button onClick={this.handleStopwatch}>\n          { this.state.isRunning ? 'Stop' : 'Start' }\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}